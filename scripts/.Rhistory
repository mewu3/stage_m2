sample = "enterovirus"
before = sprintf("/datater/wu/data/%s/evaluation/allOligo_before.tsv", sample)
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
library(tidyverse)
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
files <- list.files(path=datadir, pattern='.tsv', full.names = TRUE)
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", paste="/")
### species coverage
read.delim(file=specieCoverage, sep="\t")
?paste
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", sep="/")
### species coverage
read.delim(file=specieCoverage, sep="\t")
?read.delim
### species coverage
read.delim(file=specieCoverage, sep="\t", header=FALSE)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
View(table)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
View(table3)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
library(tidyverse)
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
files <- list.files(path=datadir, pattern='.tsv', full.names = TRUE)
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", sep="/")
totolSeq = 3265
savePlot <- function(myPlot, plotname) {
pdf(plotname)
print(myPlot)
dev.off()
}
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
View(table3)
#import the required libraries
library(ggplot2)
library(dplyr)
library(ggthemes)
install.packages('ggthemes')
#import the required libraries
library(ggplot2)
library(dplyr)
library(ggthemes)
#shows the data
head(diamonds)
#plots the histogram
ggplot(diamonds, aes(carat))+geom_histogram()
#changes the bin width
ggplot(diamonds, aes(carat))+geom_histogram(binwidth = 0.01)
#adds the fill element and x,y and main labels of the graph
ggplot(diamonds, aes(carat, fill=cut))+geom_histogram()+labs(x='carats', y=' Frequency of carats')+ggtitle("Distribution of diamonds's carat by cut values")
#chnages the theme for attractive graph
ggplot(diamonds, aes(carat, fill=cut))+geom_histogram()+labs(x='carats', y=' Frequency of carats')+ggtitle("Distribution of diamonds's carat by cut values")+theme_classic()
#adds the fill element and x,y and main labels of the graph
ggplot(diamonds, aes(carat, fill=cut)) +
geom_histogram() +
labs(x='carats', y=' Frequency of carats') +
ggtitle("Distribution of diamonds's carat by cut values")
table(diamonds)
diamonds
View(table3)
View(table3)
ggplot(table3, aes(position, fill=species)) +
geom_histogram() +
labs(x='position', y=' Frequency of species')
ggplot(table3, aes(position, fill=species)) +
geom_histogram() +
labs(x='position', y='Frequency of species')
#adds the fill element and x,y and main labels of the graph
ggplot(diamonds, aes(carat, fill=cut)) +
geom_histogram() +
labs(x='carats', y=' Frequency of carats') +
ggtitle("Distribution of diamonds's carat by cut values")
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_histogram() +
labs(x='position', y='Frequency of species')
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
labs(x='position', y='Frequency of species')
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
labs(x='position', y='Frequency of species')
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
labs(x='position', y='Frequency of species')
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
labs(x='position', y='Frequency of species') +
ylim(0,100)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
labs(x='position', y='Frequency of species') +
ylim(0,100)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100)
library(tidyverse)
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
files <- list.files(path=datadir, pattern='.tsv', full.names = TRUE)
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", sep="/")
totolSeq = 3265
savePlot <- function(myPlot, plotname) {
pdf(plotname)
print(myPlot)
dev.off()
}
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
View(table3)
factor(table3$position)
table3$position <- factor(table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
files <- list.files(path=datadir, pattern='.tsv', full.names = TRUE)
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", sep="/")
totolSeq = 3265
savePlot <- function(myPlot, plotname) {
pdf(plotname)
print(myPlot)
dev.off()
}
### the most abondunce kmer coverage
for (file in files) {
filename = tools::file_path_sans_ext(file)
table = read.delim(file=file, sep="\t")
table[,2] <- table[,2]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
plot <- ggplot(table3, aes(x=position, y=kmerCount)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100) +
ylab("kmer Coverage")
plotname = paste(filename, ".pdf", sep="")
savePlot(plot, plotname)
}
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
ylim(0,totolSeq)
library(tidyverse)
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
files <- list.files(path=datadir, pattern='.tsv', full.names = TRUE)
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", sep="/")
totolSeq = 3265
savePlot <- function(myPlot, plotname) {
pdf(plotname)
print(myPlot)
dev.off()
}
### the most abondunce kmer coverage
for (file in files) {
filename = tools::file_path_sans_ext(file)
table = read.delim(file=file, sep="\t")
table[,2] <- table[,2]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
plot <- ggplot(table3, aes(x=position, y=kmerCount)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100) +
ylab("kmer Coverage")
plotname = paste(filename, ".pdf", sep="")
savePlot(plot, plotname)
}
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
ylim(0,3265)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
table3$position <- factor(table3$position, levels=unique(table3$position))
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=unique(table3$position))
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100)
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10))
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100) +
labs(x='position', y='Frequency of species')
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
labs(x='position', y='Frequency of species')
library(tidyverse)
datadir <- "/home/meijun/Documents/server/data/enterovirus/evaluation"
files <- list.files(path=datadir, pattern='.tsv', full.names = TRUE)
specieCoverage = paste(datadir, "allOligos_reverse.set.coverage", sep="/")
totolSeq = 3265
savePlot <- function(myPlot, plotname) {
pdf(plotname)
print(myPlot)
dev.off()
}
### the most abondunce kmer coverage
for (file in files) {
filename = tools::file_path_sans_ext(file)
table = read.delim(file=file, sep="\t")
table[,2] <- table[,2]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=table3$position)
plot <- ggplot(table3, aes(x=position, y=kmerCount)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100) +
ylab("kmer Coverage")
plotname = paste(filename, ".pdf", sep="")
savePlot(plot, plotname)
}
### species coverage
table = read.delim(file=specieCoverage, sep="\t", header=FALSE)
names(table) = c("position", "species", "count")
table[,3] <- table[,3]/totolSeq *100
table2 <- table %>% separate(position, into = c("position1", "position2"))
table3 <- cbind(table$position, table2)
cols.num <- c("position1", "position2")
table3[cols.num] <- sapply(table3[cols.num],as.numeric)
colnames(table3)[1] <- "position"
table3 <- table3 %>%
arrange(position1)
table3$position <- factor(table3$position, levels=unique(table3$position))
ggplot(table3, aes(x=position, y=count, fill=species)) +
geom_col() +
theme(axis.text.x = element_text(angle=90, size=10)) +
ylim(0,100) +
labs(x='position', y='Frequency of species')
